################################################################################
#      Copyright (C) 2020        Sebastian Francisco Colomar Bauza             #
#      SPDX-License-Identifier:  GPL-2.0-only                                  #
################################################################################
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: rng
spec:
  selector:
    matchLabels:
      app: rng
  template:
    metadata:
      labels:
        app: rng
    spec:
      containers:
      - name: rng
        image: academiaonline/dockercoins:latest-rng
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 1G
          requests:
            cpu: 100m
            memory: 1G          
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hasher
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hasher
  template:
    metadata:
      labels:
        app: hasher
    spec:
      containers:
      - name: hasher
        image: academiaonline/dockercoins:latest-hasher
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 1G
          requests:
            cpu: 100m
            memory: 1G          
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:latest
        ports:
        - containerPort: 6379
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 1G
          requests:
            cpu: 100m
            memory: 1G          
        volumeMounts:
        - name: redis
          mountPath: /data
      volumes:
        - name: redis
          persistentVolumeClaim:
            claimName: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webui
  template:
    metadata:
      labels:
        app: webui
    spec:
      containers:
      - name: webui
        image: academiaonline/dockercoins:latest-webui
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 1G
          requests:
            cpu: 100m
            memory: 1G          
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      labels:
        app: worker
    spec:
      containers:
      - name: worker
        image: academiaonline/dockercoins:latest-worker
        resources:
          limits:
            cpu: 100m
            memory: 1G
          requests:
            cpu: 100m
            memory: 1G          
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: hasher
spec:
  ingress:
  - ports:
    - port: 8080
      protocol: TCP
    from:
    - podSelector:
        matchLabels:
          app: worker
  podSelector:
    matchLabels:
      app: hasher
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: redis
spec:
  ingress:
  - ports:
    - port: 6379
      protocol: TCP
    from:
    - podSelector:
        matchLabels:
          app: webui
    - podSelector:
        matchLabels:
          app: worker
  podSelector:
    matchLabels:
      app: redis
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: rng
spec:
  podSelector:
    matchLabels:
      app: rng
  ingress:
  - ports:
    - port: 8080
      protocol: TCP
    from:
    - podSelector:
        matchLabels:
          app: worker
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: webui
spec:
  podSelector:
    matchLabels:
      app: webui
  ingress:
  - ports:
    - port: 8080
      protocol: TCP      
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: worker
spec:
  podSelector:
    matchLabels:
      app: worker
  policyTypes:
  - Ingress
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /redis
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: hasher
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    app: hasher
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  ports:
  - port: 6379
    protocol: TCP
  selector:
    app: redis
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: rng
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    app: rng
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: webui
spec:
  ports:
  - port: 8080
    protocol: TCP
    nodePort: 30000
  selector:
    app: webui
  type: NodePort
---
